import Head from 'next/head'
import styles from '../styles/Cart.module.css'
import Link from 'next/link'
import cookieCutter from 'cookie-cutter'
import React, { useState, useEffect } from 'react'
import { Divider, Navbar, CartItem, BackToTopButton } from '../Components/MyComponents'
import { useRouter } from 'next/router'
export default function Cart() {
    const [dataState, setDataState] = useState([]);
    const [gotData, setGotData] = useState(false);
    const [total, setTotal] = useState(0);
    const router = useRouter()
    var tempTotal = 0;
    useEffect(() => {
        getCookie();
    }, []);

    function getCookie() {
        var cookieVal = cookieCutter.get('Cart');
        if (cookieVal) {
            setDataState(JSON.parse(cookieVal));
            setGotData(true);
        }
    }
    
    function totalGot(e, i) {
        var current = parseInt(e);
        tempTotal = tempTotal + current;
        if (i == dataState.length - 1) {
            setTotal(tempTotal);
        }
    }
    function UpdateItemQuantity(index, add,price) {
        var priceInt = parseInt(price);
        if(add){
            dataState[index].quantity = dataState[index].quantity + 1;
            setTotal(total + priceInt);
        }
        else{
            dataState[index].quantity = dataState[index].quantity - 1;
            setTotal(total - priceInt);
        }
        cookieCutter.set('Cart', JSON.stringify(dataState));
    }
    function removeItem(index) {
        if (index > -1) {
            var tempArray = dataState.filter((o, i) => index !== i)
            cookieCutter.set('Cart', JSON.stringify(tempArray));
            setDataState([]);
            setTimeout(() => {
            getCookie();
            }, 500);
        }
    }
    return (
        <div className={styles.container}>
            <Head>
                <title>Cart</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main className={styles.main}>
                <Navbar />
                <BackToTopButton />
                <Divider title="Cart" />

                {gotData ?
                    <div className={styles.ConDiv}>
                        <div className={styles.itemsCon}>
                            <div className={styles.itemsConInfoCon}>
                                <h1 className={styles.itemsConInfoText}>Product Name</h1>
                                <div className={styles.itemsConInfoSubCon}>
                                    <h1 className={styles.itemsConInfoText}>Size</h1>
                                    <h1 className={styles.itemsConInfoText}>Color</h1>
                                </div>
                                <div className={styles.itemsConInfoSubCon}>
                                    <h1 className={styles.itemsConInfoText}>Price</h1>
                                    <h1 className={styles.itemsConInfoText}>Quantity</h1>
                                </div>
                                <div className={styles.itemsConInfoSubCon}>
                                    <h1 className={styles.itemsConInfoText}>Total</h1>
                                </div>
                            </div>
                            {
                                dataState &&
                                dataState.map((data, i) => {
                                    return (
                                        <CartItem key={i} onTotalAdd={(price) => UpdateItemQuantity(i,true,price)}
                                            onTotalRemove={(price) => UpdateItemQuantity(i,false,price)}
                                            onTotalGet={(e) => totalGot(e, i)}
                                            cart={true}
                                            id={data.id}
                                            size={data.size}
                                            color={data.color}
                                            quantity={data.quantity}
                                            onRemove={() => removeItem(i)} />
                                    )
                                })}
                        </div>
                        <div className={styles.totalCon}>
                            <Divider title="Cart Summary" />
                            <div className={styles.summaryCard}>
                                <div className={styles.summaryCardItem}>
                                    <h2 className={styles.summaryCardTitle}>SubTotal</h2>
                                    <h2 className={styles.summaryCardValue}>{total}Rs</h2>
                                </div>
                                <div className={styles.summaryCardItem}>
                                    <h2 className={styles.summaryCardTitle}>Shipping</h2>
                                    <h2 className={styles.summaryCardValue}>200Rs</h2>
                                </div>
                                <div className={styles.summaryCardDivider} />
                                <div className={styles.summaryCardItem}>
                                    <h2 className={styles.summaryCardTitle}>Total</h2>
                                    <h2 className={styles.summaryCardValue}>{total + 200}Rs</h2>
                                </div>
                                <Link href={"/Checkout"}><h2 className={styles.summaryCardButton}>Check out</h2></Link>
                            </div>
                        </div>
                    </div>
                    : <button onClick={() => getCookie()}>Retrive Data</button>}
            </main>

            <style global jsx>{`
            body {
               margin: 0px !important;
               padding: 0px !important;

            }`}</style>
        </div>

    )
}
